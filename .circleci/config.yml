version: 2.1

# orbs:
#   slack: circleci/slack@3.4.2
#   vault: jmingtan/hashicorp-vault@0.2.1

executors:
  ubuntu-docker:
    docker:
    - image: mozillarelops/circleci-ubuntu-2204:v0.0.1
    # see https://github.com/mozilla-platform-ops/relops_infra_as_code/tree/master/docker for Dockerfile
  ubuntu-vm:
    machine:
      image: ubuntu-2204:2023.07.2

commands:
  apt_cache_restore:
    steps:
      - run: mkdir -p /tmp/docker/var/cache/apt
      - run: sudo find /tmp/docker/var/cache/apt -type f -name *.deb | sort > apt_cache_debs_checksum
      - restore_cache:
          keys:
          - v1-apt-cache-{{ arch }}-{{ .Branch }}-{{ checksum "apt_cache_debs_checksum" }}
          - v1-apt-cache-{{ arch }}-{{ .Branch }}-
          - v1-apt-cache-{{ arch }}-
  apt_cache_save:
    steps:
      - run: sudo find /tmp/docker/var/cache/apt -type f -name *.deb | sort > apt_cache_debs_checksum
      - save_cache:
          paths:
            - /tmp/docker/var/cache/apt
          key: v1-apt-cache-{{ arch }}-{{ .Branch }}-{{ checksum "apt_cache_debs_checksum" }}
  gem_cache:
    steps:
      - restore_cache:
          keys:
          # when lock file changes, use increasingly general patterns to restore cache
          - v3-gem-cache-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          - v3-gem-cache-{{ arch }}-{{ .Branch }}-
          - v3-gem-cache-{{ arch }}-
      - run:
          name: Bundle Install and forced clean
          command: |
            gem install bundler
            bundle config set --local path 'vendor/bundle'
            bundle install
            bundle clean --force
      - save_cache:
          paths:
            - vendor/
          key: v3-gem-cache-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
jobs:
  pre_commit:
    executor: ubuntu-docker
    steps:
      - checkout
      - run: pip3 install pre-commit
      - run: pre-commit run --all-files --verbose
  linux_integration_tests:
    executor: ubuntu-vm
    resource_class: large
    parameters:
      kitchen_target:
        type: string
    steps:
      - checkout
      - gem_cache
      - apt_cache_restore
      - run:
          name: fix vagrant
          command: |
            wget -qO- https://apt.releases.hashicorp.com/gpg | sudo tee /etc/apt/trusted.gpg.d/hashicorp.asc
            sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
            sudo apt-get update
            sudo apt-get install vagrant -y
      # TODO: add bolt modules caching (stored in .modules)
      - run:
          name: install bolt and puppet modules
          # command: ./ci-run-filter.py -c './ci_bolt_install.sh' -s 'modules/' -s 'Puppetfile' -s 'bolt-project.yaml' -v
          command: ./ci_bolt_install.sh
      - run:
          name: converge
          # command: ./ci-run-filter.py -c 'bundle exec kitchen converge << parameters.kitchen_target >>' -s 'modules/' -v
          command: bundle exec kitchen converge << parameters.kitchen_target >>
          no_output_timeout: 60m
      - run:
          name: verify
          # command: ./ci-run-filter.py -c 'bundle exec kitchen verify << parameters.kitchen_target >>' -s 'modules/' -v
          command: bundle exec kitchen verify << parameters.kitchen_target >>
      - apt_cache_save

workflows:
  ci_test:
    jobs:
      - pre_commit
      - linux_integration_tests:
          matrix:
            parameters:
              kitchen_target: ["snakepit-head", "snakepit-worker"]
          requires:
            - pre_commit
